@model barber_shop.Models.ViewModel.UserFormViewModel
@using Microsoft.AspNetCore.Identity;
@using barber_shop.Models.Enums;

@{
    ViewData["Title"] = "Criar Conta";
}

@if (TempData["ErrorRegister"] is not null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-2 container-cadastro" id="alert-register" role="alert" heigth="100px">
        @TempData["ErrorRegister"].ToString()
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div class="container-cadastro">
    <section class="container-registro mt-3">
        <header>Formulário de Registro</header>
        <form class="form-register" asp-action="Register" enctype="multipart/form-data">
            <div class="input-box">
                <label asp-for="User.Name"></label>
                <input asp-for="User.Name" placeholder="Insira seu nome">
                <span asp-validation-for="User.Name" class="text-danger"></span>
            </div>

            <div class="mt-3">
                <label asp-for="User.Profile.Image"></label> <br />
                <input type="file" name="Image">
            </div>

            <div class="input-box">
                <label asp-for="User.Cpf"></label>
                <input id="cpf" asp-for="User.Cpf" placeholder="Insira seu CPF" type="text">
                <span asp-validation-for="User.Cpf" class="text-danger"></span>
            </div>

            <div class="input-box">
                <label asp-for="User.Gender" class="control-label"></label>
                <!--asp-items constroi uma caixa de seleção com base na lista informada-->
                <!--1arg- fonte de dados da coleção 2arg- qual atributo será a chave 3arg- qual informação aparecerá para o usuário-->
                <select class="generos" asp-for="User.GenderId" asp-items="@(new SelectList(Model.Genders, "Id", "Description"))"></select>
            </div>

            <div class="column-register">
                <div class="input-box">
                    <label asp-for="User.Address.ZipCode"></label>
                    <input id="zipCode" asp-for="User.Address.ZipCode" placeholder="Entre com seu CEP">
                </div>
                <div class="input-box">
                    <label></label>
                    <input id="btnBuscar" class="btn btn-primary" type="button" value="Pesquisar Cep" onclick="BuscaCep()" />
                </div>
            </div>
            <span asp-validation-for="User.Address.ZipCode" class="text-danger"></span>

            <div class="input-box">
                <label asp-for="User.Address.PublicPlace"></label>
                <input id="publicPlace" asp-for="User.Address.PublicPlace" placeholder="Entre com seu logradouro">
                <span asp-validation-for="User.Address.PublicPlace" class="text-danger"></span>
            </div>

            <div class="input-box">
                <label asp-for="User.Address.Neighborhood"></label>
                <input id="neighborhood" asp-for="User.Address.Neighborhood" placeholder="Entre com seu bairro">
                <span asp-validation-for="User.Address.Neighborhood" class="text-danger"></span>
            </div>

            <div class="input-box">
                <label asp-for="User.Address.Locality"></label>
                <input id="locality" asp-for="User.Address.Locality" placeholder="Entre com sua localidade">
                <span asp-validation-for="User.Address.Locality" class="text-danger"></span>
            </div>

            <div class="column-register">
                <div class="input-box">
                    <label asp-for="User.Telephone"></label>
                    <input asp-for="User.Telephone" placeholder="Enter com seu telefone" type="telephone">
                    <span asp-validation-for="User.Telephone" class="text-danger"></span>
                </div>
                <div class="input-box">
                    <label asp-for="User.BirthDate"></label>
                    <input asp-for="User.BirthDate">
                    <span asp-validation-for="User.BirthDate" class="text-danger"></span>
                </div>
            </div>

            <div class="input-box">
                <label asp-for="User.Profile.Email"></label>
                <input asp-for="User.Profile.Email">
                <span asp-validation-for="User.Profile.Email" class="text-danger"></span>
            </div>

            <div class="input-box">
                <label asp-for="User.Profile.Password"></label>
                <input asp-for="User.Profile.Password" type="password">
                <span asp-validation-for="User.Profile.Password" class="text-danger"></span>
            </div>

            @if (User.Identity.IsAuthenticated)
            {
                if (User.Claims.First().Value == EnumAccountCategory.ADMINISTRATOR.ToString())
                {
                    <div class="input-box">
                        <label asp-for="User.Profile" class="control-label"></label>
                        <!--asp-items constroi uma caixa de seleção com base na lista informada-->
                        <!--1arg- fonte de dados da coleção 2arg- qual atributo será a chave 3arg- qual informação aparecerá para o usuário-->
                        <select asp-for="User.Profile.CategoryId" asp-items="@(new SelectList(Model.AccountCategories, "Id", "Description"))"></select>
                    </div>
                }
            }
            <button>Cadastrar-se</button>
        </form>
    </section>
</div>

<script src="~/js/register.js"></script>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
