@using barber_shop.Models.Enums;
@model barber_shop.Models.ViewModel.DashboardBarberViewModel;
<link rel="stylesheet" type="text/css" href="~/css/dashboard/dashboardBarber.css" />
@{
    string result;
    var nameFormat = Model.Barber.Name.Split(' ');
    if (nameFormat.Length >= 2)
    {
        result = $"{nameFormat[0]} {nameFormat[1]}";
    }
    else
    {
        result = Model.Barber.Name;
    }
    ViewData["Title"] = "Perfil do barbeiro";
}

<div class="mt-3" style="margin-left: 28%;">
    <div class="card mb-3" style="max-width: 540px;">
        <div class="row g-0">
            <div class="col-md-4">
                <div class="card-img">
                    @{
                        string imgSrc;
                        if (Model.Barber.Profile.Image is not null)
                        {
                            var base64 = Convert.ToBase64String(Model.Barber.Profile.Image);
                            imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                        }
                        else
                        {
                            imgSrc = null;
                        }
                    }
                    <img src="@imgSrc" alt="img-barber" style="max-width:200px; max-height:200px;">
                </div>
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <h5 class="card-title">@Model.Barber.Name</h5>
                    <p class="card-text">Email - <strong>@Model.Barber.Profile.Email</strong> <br /> Telefone - <strong>@Model.Barber.Telephone</strong></p>
                </div>
            </div>
        </div>
    </div>
</div>

<br />
<hr />
<div class="text-center">
    <h1 class="display-4">Avaliações de @result</h1>
    @if (User.Identity.IsAuthenticated)
    {
        if (User.Claims.First().Value == EnumAccountCategory.CLIENT.ToString())
        {
            <a href="#avaliaBarbeiro" class="btn btn-primary" id="btn-nenhum-cadastro">Avaliar Barbeiro</a>
        }
    }
</div>

@if (Model.Assessments.Count() == 0)
{
    <div class="text-center">
        <h4>Nenhuma comentário</h4>
    </div>
}
else
{
    foreach (var item in Model.Assessments)
    {
        <div class="card m-3" style="width: 18rem; display:inline-block;">
            <div class="card-body">
                <h5 class="card-title">@item.Client.Name</h5>
                <h6 class="card-subtitle mb-2 text-body-secondary">
                    Descrição da avaliação
                </h6>
                <p class="card-text">
                    @item.Description
                </p>
            </div>
        </div>
    }
}

<hr />
<div class="text-center">
    <h1 class="display-4">Galeria</h1>
</div>
@if (Model.PhotoOfBarberServices.Count() == 0)
{
    @if (User.Identity.IsAuthenticated)
    {
        if (User.Claims.First().Value == EnumAccountCategory.BARBER.ToString() && User.Identity.Name == Model.Barber.Cpf)
        {
            <div class="text-center">
                <a asp-action="AddMyPhotoToMyGallery" asp-controller="Dashboard" class="btn btn-primary" id="btn-nenhum-cadastro">Incluir Foto</a>
            </div>
        }
    }
    <div class="text-center">
        <h4>Nenhuma foto foi adicionada até o momento</h4>
    </div>
}
else
{
    foreach (var item in Model.PhotoOfBarberServices)
    {
        var base64 = Convert.ToBase64String(item.Image);
        var imgGalery = String.Format("data:image/gif;base64,{0}", base64);

        <div class="card" style="width: 18rem; display: inline-block;">
            <img src="@imgGalery" class="card-img-top">
        </div>
    }
}

@if (User.Identity.IsAuthenticated)
{
    if (User.Claims.First().Value == EnumAccountCategory.CLIENT.ToString())
    {
        <hr />
        <div class="container-feedback">
            <h1 class="h1feedback">Avaliar Barbeiro</h1>
            <form id="avaliaBarbeiro" asp-action="EvaluatesBarber" asp-controller="Dashboard">
                <label class="labelfeedback" for="rating">Barbeiro:</label>
                <p>@Model.Barber.Name</p>

                <label class="labelfeedback">Comentários:</label>
                <textarea class="textareafeedback" id="comments" name="comments" rows="5" maxlength="500" required></textarea>

                <input type="hidden" name="idBarber" value="@Model.Barber.Id" />
                <input type="hidden" name="cpf" value="@User.Identity.Name" />

                <button class="btnfeedback" type="submit">Enviar Avaliação</button>
            </form>
        </div>
    }
}