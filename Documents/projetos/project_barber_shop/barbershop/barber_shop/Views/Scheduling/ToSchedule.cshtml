@using barber_shop.Models.Enums;
@model barber_shop.Models.ViewModel.SchedulingFormViewModel

@{
    ViewData["Title"] = "Agendar";
}

<div class="text-center">
    <h1 class="display-4">Realizar Agendamento</h1>
</div>

<hr />

@if (TempData["ErrorScheduling"] is not null)
{
    <script>
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: '@TempData["ErrorScheduling"].ToString()'
        })
    </script>
}
<div class="container-cadastro">
    <section class="container-registro mt-3">
        <header>Registro de Serviço</header>
        <form class="form-register" asp-action="ToSchedule">
            <div class="input-box">
                <label asp-for="Scheduling.Date"></label>
                <input id="dateScheduling" asp-for="Scheduling.Date" onblur="DesabilitaHorarioDomingo()">
                <span asp-validation-for="Scheduling.Date" class="text-danger"></span>
            </div>

            <div class="input-box">
                <label class="control-label">Horário do Agendamento</label>
                <select class="custom-select1" asp-for="Scheduling.SchedulingTimesId" required>
                    <option style="display: inline-block" disabled selected>Selecione um Horário</option>
                    @foreach (var item in Model.SchedulingTimes)
                    {
                        <option id="@item.Id" value="@item.Id">@item.Description</option>
                    }
                </select>
            </div>

            <div class="input-box">
                <label class="control-label">Barbeiro</label>
                <select class="custom-select1" asp-for="Scheduling.BarberId" required>
                    <option style="display: inline-block" disabled selected>Selecione um Barbeiro</option>
                    @foreach (var item in Model.Barbers)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </div>

            <div class="input-box">
                <label class="control-label">Serviço</label>
                <select class="custom-select1" asp-for="Scheduling.ServiceId" required>
                    <option style="display: inline-block" disabled selected>Selecione um Serviço</option>
                    @foreach (var item in Model.Services)
                    {
                        <option value="@item.Id" onclick="capturaValor(@item.Value.ToString())">@item.Name</option>
                    }
                </select>
            </div>

            <div class="input-box">
                <label class="control-label">Valor do Serviço Selecionado</label>
                <strong>R$</strong> - <p id="valorSelecionado"></p>
            </div>

            @if (User.Claims.First().Value == nameof(EnumAccountCategory.ADMINISTRATOR) || User.Claims.First().Value == nameof(EnumAccountCategory.BARBER))
            {
                <div class="input-box">
                    <label>Digite o CPF do cliente que será agendado</label>
                    <input id="cpf" asp-for="CpfResponsible" maxlength="14" onblur="formatCpf()" onkeyup="removeCaracteres()">
                    <span asp-validation-for="CpfResponsible" class="text-danger"></span>
                </div>
            }

            <button type="submit">Realizar Agendamento</button>
        </form>
    </section>
</div>

<script src="~/js/register.js"></script>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
