@using barber_shop.Models.Enums;
@model barber_shop.Models.ViewModel.SchedulingFormViewModel

@{
    ViewData["Title"] = "Agendamento";
}

<div class="text-center">
    <h1 class="display-4">Realizar Agendamento</h1>
</div>

@if (TempData["ErrorScheduling"] is not null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-2 container-cadastro" id="alert-register" role="alert" heigth="100px">
        @TempData["ErrorScheduling"].ToString()
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div class="container-cadastro">
    <section class="container-registro mt-3">
        <header>Registro de Serviço</header>
        <form class="form-register" asp-action="ToSchedule">
            <div class="input-box">
                <label asp-for="Scheduling.Date"></label>
                <input asp-for="Scheduling.Date">
                <span asp-validation-for="Scheduling.Date" class="text-danger"></span>
            </div>

            <div class="input-box">
                <label asp-for="Scheduling.SchedulingTimes" class="control-label"></label>
                <!--asp-items constroi uma caixa de seleção com base na lista informada-->
                <!--1arg- fonte de dados da coleção 2arg- qual atributo será a chave 3arg- qual informação aparecerá para o usuário-->
                <select asp-for="Scheduling.SchedulingTimesId" asp-items="@(new SelectList(Model.SchedulingTimes, "Id", "Description"))"></select>
            </div>

            <div class="input-box">
                <label class="control-label">Barbeiro</label>
                <select asp-for="Scheduling.BarberId" asp-items="@(new SelectList(Model.Barbers, "Id", "Name"))"></select>
            </div>

            <div class="input-box">
                <label class="control-label">Serviço</label>
                <select asp-for="Scheduling.ServiceId" asp-items="@(new SelectList(Model.Services, "Id", "Name"))"></select>
            </div>

            @if (User.Claims.First().Value == nameof(EnumAccountCategory.ADMINISTRATOR) || User.Claims.First().Value == nameof(EnumAccountCategory.BARBER))
            {
                <div class="input-box">
                    <label>Digite o CPF do cliente que será agendado</label>
                    <input asp-for="CpfResponsible">
                    <span asp-validation-for="CpfResponsible" class="text-danger"></span>
                </div>
            }

            <button type="submit">Realizar Agendamento</button>
        </form>
    </section>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
